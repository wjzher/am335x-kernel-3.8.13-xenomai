/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/* 适配OK335x */

/include/ "am33xx.dtsi"

/ {
	model = "TI AM335x AGV";
	compatible = "ti,am335x-agv", "ti,am33xx";

	cpus {
		cpu@0 {
			cpu0-supply = <&dcdc3_reg>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x10000000>; /* 256 MB */
	};

	am33xx_pinmux: pinmux@44e10800 {
		pinctrl-names = "default";
		pinctrl-0 = <&i2c0_pins>;

		i2c0_pins: pinmux_i2c0_pins {
			pinctrl-single,pins = <
				0x188 0x70 	/* i2c0_sda, SLEWCTRL_SLOW | INPUT_PULLUP | MODE0 */
				0x18c 0x70	/* i2c0_scl, SLEWCTRL_SLOW | INPUT_PULLUP | MODE0 */
			>;
		};
		gpmc_pins: pinmux_gpmc_pins {
			pinctrl-single,pins = <
				0x0	0x30	/* gpmc_ad0.gpmc_ad0 */
				0x4	0x30	/* gpmc_ad1.gpmc_ad1 */
				0x8	0x30	/* gpmc_ad2.gpmc_ad2 */
				0xc	0x30	/* gpmc_ad3.gpmc_ad3 */
				0x10	0x30	/* gpmc_ad4.gpmc_ad4 */
				0x14	0x30	/* gpmc_ad5.gpmc_ad5 */
				0x18	0x30	/* gpmc_ad6.gpmc_ad6 */
				0x1c	0x30	/* gpmc_ad7.gpmc_ad7 */
				0x70	0x30	/* gpmc_wait0.gpmc_wait0 */
				/* 0x74	0x37 */	/* gpmc_wpn.gpio0_30 */
				0x7c	0x10	/* gpmc_csn0.gpmc_csn0  */
				0x90	0x10	/* gpmc_advn_ale.gpmc_advn_ale */
				0x94	0x10	/* gpmc_oen_ren.gpmc_oen_ren */
				0x98	0x10	/* gpmc_wen.gpmc_wen */
				0x9c	0x10	/* gpmc_be0n_cle.gpmc_be0n_cle */
			>;
		};
	};

	ocp: ocp {
		uart1: serial@44e09000 {
			status = "okay";
		};
		rtc@44e3e000 {
			ti,system-power-controller;
		};
		test_helper: helper {
			compatible = "bone-iio-helper";
			vsense-name  = "AIN0", "AIN1", "AIN2", "AIN3", "AIN4", "AIN5", "AIN6", "AIN7";
			vsense-scale = <100     100     100     100     100     100     100     100>;
			status = "okay";
		};
	};
};

&tscadc {
	status = "okay";

	adc {
		ti,adc-channels = <0 1 2 3 4 5 6 7>;
	};
};

&i2c0 {
	status = "okay";
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;

	tps: tps@24 {
		reg = <0x24>;
	};
};

&i2c2 {
	status = "disabled";
};

/include/ "tps65217.dtsi"

&tps {
	ti,pmic-shutdown-controller;

	/* interrupt-parent = <&intc>; */
	/* interrupts = <7>; */	/* NNMI */
	/* interrupt-inverted; */

	regulators {
		dcdc1_reg: regulator@0 {
			regulator-always-on;
		};

		dcdc2_reg: regulator@1 {
			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <925000>;
			regulator-max-microvolt = <1150000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc3_reg: regulator@2 {
			/* VDD_MPU voltage limits 0.95V - 1.26V with +/-4% tolerance */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <925000>;
			regulator-max-microvolt = <1325000>;
			regulator-boot-on;
			regulator-always-on;
		};

		ldo1_reg: regulator@3 {
			regulator-always-on;
		};

		ldo2_reg: regulator@4 {
			regulator-always-on;
		};

		ldo3_reg: regulator@5 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-always-on;
		};

		ldo4_reg: regulator@6 {
			regulator-always-on;
		};
	};

};

&edma {
	ti,edma-xbar-event-map = <32 12>,	/* gpevt2 -> 12 */
				 <30 20>;	/* xdma_event_intr2 -> 20 */
};

&sham {
	status = "okay";
};

&aes {
	status = "okay";
};

&usb_otg_hs {
	interface_type = <1>;
	power = <250>;
	status = "okay";
};

&gpmc {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&gpmc_pins>;
	ranges = <0 0 0x08000000 0x1000000>;	/* CS0: 16MB for NAND */
	nand@0,0 {
		reg = <0 0 0>;		/* CS0, offset 0 */
		ti,nand-ecc-opt = "bch8";
		/* ti,elm-id = <&elm>; */	/* unsupport */
		nand-bus-width = <8>;
		gpmc,device-width = <1>;
		gpmc,sync-clk-ps = <0>;		/* timings */
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <170>;
		gpmc,cs-wr-off-ns = <170>;
		gpmc,adv-on-ns = <50>;
		gpmc,adv-rd-off-ns = <120>;
		gpmc,adv-wr-off-ns = <120>;
		gpmc,we-on-ns = <0>;
		gpmc,we-off-ns = <90>;
		gpmc,oe-on-ns = <0>;
		gpmc,oe-off-ns = <90>;
		gpmc,access-ns = <90>;
		gpmc,rd-cycle-ns = <150>;
		gpmc,wr-cycle-ns = <150>;
		gpmc,wait-on-read = "true";
		gpmc,wait-on-write = "true";
		gpmc,bus-turnaround-ns = <0>;
		gpmc,cycle2cycle-delay-ns = <0>;
		gpmc,clk-activation-ns = <0>;
		gpmc,wait-monitoring-ns = <0>;
		gpmc,wr-access-ns = <100>;
		gpmc,wr-data-mux-bus-ns = <0>;
		gpmc,device-nand = "true";
		/* MTD partition table */
		/* All SPL-* partitions are sized to minimal length
		 * which can be independently programmable. For
		 * NAND flash this is equal to size of erase-block */
		#address-cells = <1>;
		#size-cells = <1>;
		partition@0 {
			label = "NAND.SPL";
			reg = <0x00000000 0x000020000>;		/* offset, size */
		};
		partition@1 {
			label = "NAND.SPL.backup1";
			reg = <0x00020000 0x00020000>;
		};
		partition@2 {
			label = "NAND.SPL.backup2";
			reg = <0x00040000 0x00020000>;
		};
		partition@3 {
			label = "NAND.SPL.backup3";
			reg = <0x00060000 0x00020000>;
		};
		partition@4 {
			label = "NAND.u-boot-spl-os";
			reg = <0x00080000 0x00040000>;
		};
		partition@5 {
			label = "NAND.u-boot";
			reg = <0x000C0000 0x00100000>;
		};
		partition@6 {
			label = "NAND.u-boot-env";
			reg = <0x001C0000 0x00020000>;
		};
		partition@7 {
			label = "NAND.u-boot-env.backup1";
			reg = <0x001E0000 0x00020000>;
		};
		partition@8 {
			label = "NAND.kernel";
			reg = <0x00200000 0x00800000>;
		};
		partition@9 {
			label = "NAND.file-system";
			reg = <0x00A00000 0x0F600000>;
		};
	};
};


